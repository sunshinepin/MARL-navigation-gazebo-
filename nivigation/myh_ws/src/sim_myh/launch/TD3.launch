<launch>

  <!-- <arg name="robot_name" default="p3dx" /> -->
  <arg name="robot_name" default="car1" />
  <arg name="robot_position" default="-x 0.0 -y 0.0 -z 0.01" />

 <!-- Load controller parameters -->
  <rosparam command="load" file="$(find hunter_se_control)/config/ctrl_ackermann_steering_controller_car1.yaml" />
  <rosparam command="load" file="$(find hunter_se_control)/config/ctrl_gains.yaml" />
  <rosparam command="load" file="$(find hunter_se_control)/config/ctrl_joint_state_publisher.yaml" />
  <rosparam command="load" file="$(find hunter_se_control)/config/ctrl_steer_bot_hardware_gazebo.yaml" />

  <!-- Spawn the controllers -->
  <node pkg="controller_manager" type="spawner" name="controller_spawner"
      args="joint_state_publisher ackermann_steering_controller"  output="screen" respawn="false" />
  


      <!-- Launch a rqt steering GUI for publishing to /steer_bot/steer_drive_controller/cmd_vel -->
      <node pkg="rqt_robot_steering" type="rqt_robot_steering" name="rqt_robot_steering" >
      <param name="default_topic" value="ackermann_steering_controller/cmd_vel"/>                         <!-- default velocity control topic name -->
      <param name="default_vx_max" value="1.0"/>                        <!-- linear velocity max value    m/s -->
      <param name="default_vx_min" value="-1.0"/>                       <!-- linear velocity min value    m/s-->
      <param name="default_vw_max" value="0.69"/>                    <!-- angular velocity max value  rad/s (adaptor for urdf joint limit) -->
      <param name="default_vw_min" value="-0.69"/>                   <!-- angular velocity min value  rad/s (adaptor for urdf joint limit) -->
      </node>

  <param name="robot_description" command="$(find xacro)/xacro '$(find hunter_se_description)/urdf/hunter_se_with_box_singl_sensor.xacro' robot_namespace:=car1" />
  <param name="laser_frame_id" value="car1/front_laser"/>

  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" >
          <param name="publish_frequency" value="50.0"/>
          <param name="tf_prefix" value="car1" />
      </node>
  <node name="hunter_spawn1" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -param robot_description -model car1 -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"
    respawn="false" />

  <!-- Load the URDF into the ROS Parameter Server -->
  <!-- <param name="robot_description" command="$(find xacro)/xacro '$(find multi_robot_scenario)/xacro/p3dx/pioneer3dx.xacro'" /> -->
  <!-- <param name="robot_description" command="$(find xacro)/xacro '$(find scout_description)/urdf/scout_v2_laser.xacro' robot_namespace:=car1" /> -->

  <!-- Run a python script to the send a service call to gazebo_ros to spawn a URDF robot -->

  <node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher">
    <param name="publish_frequency" type="double" value="30.0"/>
  </node>

  <!-- Launch gazebo with the specified world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find scout_gazebo_sim)/worlds/TD3.world"/>
    <arg name="paused" value="false"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="true"/>
    <arg name="headless" value="false"/>
    <arg name="debug" value="false"/>
  </include>

  <node pkg="tf" type="static_transform_publisher" name="world_to_global_1" args="0 0 0 0 0 0 world /car1/ackermann_steering_controller/odom 50" />

  <node pkg="rviz" type="rviz" name="rviz" args="-d $(find sim_myh)/rviz/test_car1.rviz"/>


</launch>

